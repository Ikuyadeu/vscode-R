name: main
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - run: npm install
      - name: Run tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm run test
  build:
    runs-on: ubuntu-latest
    env:
      VSIX_FILE: vscode-R.vsix
    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - uses: lannonbr/vsce-action@master
        with:
          args: "package -o $VSIX_FILE"
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ env.VSIX_FILE }}
          path: ${{ env.VSIX_FILE }}
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - run: npm install
      - run: npm run lint
  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: xt0rted/markdownlint-problem-matcher@v1
      - run: markdownlint **/*.md --ignore node_modules
  lintr:
    runs-on: ubuntu-latest
    container:
      image: rocker/tidyverse:latest
    steps:
      - uses: actions/checkout@v2
      - name: Install apt-get dependencies
        run: |
          apt-get update
          apt-get install git ssh curl bzip2 -y
      - name: Install lintr
        run: |
          Rscript -e "install.packages('lintr', repos = 'https://cloud.r-project.org')"
        shell: bash
      - name: Running lintr
        run: |
          Rscript -e "stopifnot(length(print(lintr::lint_dir('./R'))) == 0)"
        shell: bash
  devreplay:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - run: npm ci
      - name: Run devreplay
        run: ./node_modules/.bin/devreplay ./src devreplay.json
